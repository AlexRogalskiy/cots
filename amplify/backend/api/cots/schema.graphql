type Provider 
  @model
  @key(fields: ["owner"])
  @auth(rules: [
      {allow: owner, operations: [create, read, update, delete]},
      {allow: private, operations: [read]}
      {allow: public, operations: [read]}
    ])
{
  owner: String!
  fullName: String!
  licenseType: String!
  liabilityPolicy: String!
  email: String @function(name: "GetProviderEmail-${env}")
  phone: String
  url: String
  rate: Int!
  acceptedInsurance: [String]
  gender: Gender!
  specializations: [String]
  modalities: [String]
  languages: [String]
  active: Boolean!
  availability: [Availability]
  tosAcceptedAt: String!
  accessPoints: [AccessPoint] @connection(fields: ["owner"])
}

type Availability {
  day: Day!
  hour: Int!
  min: Int!
  duration: Int! 
}

enum Day {
  SUNDAY
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
}

enum Gender {
  MALE
  FEMALE
  NON_BINARY
}

type AccessPoint
  @model
  @key(fields: ["owner", "state"])
  @key(name: "byState", fields: ["state"], queryField: "accessPointsByState")
  @auth(rules: [
      {allow: owner, operations: [create, read, update, delete]},
      {allow: private, operations: [read]}
      {allow: public, operations: [read]}
    ])
{
    state: String!
    owner: String!
    provider: Provider @connection(fields: ["owner"])
    license: String!
}

type Referral
{
    state: String!
    rate: Int!
    acceptedInsurance: [String]
    gender: Gender
    specializations: [String]
    modalities: [String]
    languages: [String]
    providers: [Provider]
}
